{"ast":null,"code":"export const formatCurrency = (amount, currency = 'JOD') => {\n  if (typeof amount !== 'number') {\n    amount = parseFloat(amount) || 0;\n  }\n  if (currency === 'JOD') {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'JOD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  } else if (currency === 'DINARX') {\n    return `${amount.toFixed(2)} DinarX`;\n  } else {\n    return `${amount.toFixed(2)} ${currency}`;\n  }\n};\nexport const formatDate = date => {\n  if (!date) return '';\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\nexport const formatDateTime = date => {\n  if (!date) return '';\n  return new Date(date).toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nexport const formatTransactionType = type => {\n  if (!type) return 'Unknown';\n  return type.charAt(0).toUpperCase() + type.slice(1).toLowerCase();\n};\nexport const getTransactionIcon = type => {\n  switch (type === null || type === void 0 ? void 0 : type.toLowerCase()) {\n    case 'deposit':\n      return '💰';\n    case 'withdrawal':\n      return '🏧';\n    case 'transfer':\n      return '💸';\n    case 'payment':\n      return '💳';\n    case 'exchange':\n      return '🔄';\n    default:\n      return '📊';\n  }\n};\nexport const getTransactionColor = type => {\n  switch (type === null || type === void 0 ? void 0 : type.toLowerCase()) {\n    case 'deposit':\n      return 'text-green-600';\n    case 'withdrawal':\n      return 'text-red-600';\n    case 'transfer':\n      return 'text-blue-600';\n    case 'payment':\n      return 'text-purple-600';\n    case 'exchange':\n      return 'text-amber-600';\n    default:\n      return 'text-gray-600';\n  }\n};\nexport const getStatusColor = status => {\n  switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'failed':\n      return 'bg-red-100 text-red-800';\n    case 'cancelled':\n      return 'bg-gray-100 text-gray-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};","map":{"version":3,"names":["formatCurrency","amount","currency","parseFloat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","toFixed","formatDate","date","Date","toLocaleDateString","year","month","day","formatDateTime","toLocaleString","hour","minute","formatTransactionType","type","charAt","toUpperCase","slice","toLowerCase","getTransactionIcon","getTransactionColor","getStatusColor","status"],"sources":["C:/Users/oduai/OneDrive/Documents/GitHub/Fintech-Rally-ASU-/frontend/src/utils/format.js"],"sourcesContent":["export const formatCurrency = (amount, currency = 'JOD') => {\r\n  if (typeof amount !== 'number') {\r\n    amount = parseFloat(amount) || 0;\r\n  }\r\n  \r\n  if (currency === 'JOD') {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'JOD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n  } else if (currency === 'DINARX') {\r\n    return `${amount.toFixed(2)} DinarX`;\r\n  } else {\r\n    return `${amount.toFixed(2)} ${currency}`;\r\n  }\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  if (!date) return '';\r\n  return new Date(date).toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n};\r\n\r\nexport const formatDateTime = (date) => {\r\n  if (!date) return '';\r\n  return new Date(date).toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n};\r\n\r\nexport const formatTransactionType = (type) => {\r\n  if (!type) return 'Unknown';\r\n  return type.charAt(0).toUpperCase() + type.slice(1).toLowerCase();\r\n};\r\n\r\nexport const getTransactionIcon = (type) => {\r\n  switch (type?.toLowerCase()) {\r\n    case 'deposit':\r\n      return '💰';\r\n    case 'withdrawal':\r\n      return '🏧';\r\n    case 'transfer':\r\n      return '💸';\r\n    case 'payment':\r\n      return '💳';\r\n    case 'exchange':\r\n      return '🔄';\r\n    default:\r\n      return '📊';\r\n  }\r\n};\r\n\r\nexport const getTransactionColor = (type) => {\r\n  switch (type?.toLowerCase()) {\r\n    case 'deposit':\r\n      return 'text-green-600';\r\n    case 'withdrawal':\r\n      return 'text-red-600';\r\n    case 'transfer':\r\n      return 'text-blue-600';\r\n    case 'payment':\r\n      return 'text-purple-600';\r\n    case 'exchange':\r\n      return 'text-amber-600';\r\n    default:\r\n      return 'text-gray-600';\r\n  }\r\n};\r\n\r\nexport const getStatusColor = (status) => {\r\n  switch (status?.toLowerCase()) {\r\n    case 'completed':\r\n      return 'bg-green-100 text-green-800';\r\n    case 'pending':\r\n      return 'bg-yellow-100 text-yellow-800';\r\n    case 'failed':\r\n      return 'bg-red-100 text-red-800';\r\n    case 'cancelled':\r\n      return 'bg-gray-100 text-gray-800';\r\n    default:\r\n      return 'bg-gray-100 text-gray-800';\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}